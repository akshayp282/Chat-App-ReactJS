{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.564b8585.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\r\n    if (message.attachments && message.attachments.length > 0) {\r\n      return (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{ float: 'right' }}\r\n        />\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n        {message.text}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default MyMessage;","const TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n        />\r\n      )}\r\n      {message.attachments && message.attachments.length > 0\r\n        ? (\r\n          <img\r\n            src={message.attachments[0].file}\r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n          />\r\n        )\r\n        : (\r\n          <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;","import { useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue('');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;","import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst projectID = '836db5b6-714d-4dce-bfea-f688bba9a1b2';\r\n\r\nconst Modal = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Oops, incorrect credentials.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h2 className=\"error\">{error}</h2>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Modal;","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\nimport './App.css';\r\n\r\nconst projectID = '836db5b6-714d-4dce-bfea-f688bba9a1b2';\r\n\r\nconst App = () => {\r\n  if (!localStorage.getItem('username')) return <LoginForm />;\r\n\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      projectID={projectID}\r\n      userName={localStorage.getItem('username')}\r\n      userSecret={localStorage.getItem('password')}\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n      onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\r\n    />\r\n  );\r\n};\r\n\r\n// infinite scroll, logout, more customizations...\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}